<!-- MongoDB commands study -->

$ mongo
> use wm
> db.createCollection('Estados') // Cria tabledoc Estados insise of wm db
> show collections 				 // Mostra todas collections dentro de wm
> db.Estados.drop()				 // dropa tabledoc Estados

> db.createCollection('estados')
> db.estados.insertOne(
	{nome: 'Alagoas',
	sigla: 'AL',
	regiao: 'Nordeste',
	populacao: '223000'}
	)							 // cria instancia de doc dentro de db.estados
	
> db.estados.find()				 // mostra todas instancias de doc dentro de db.estados
> db.estados.find().pretty()	 // mostra instancias organizadas

> db.estados.insertOne(
	{nome: 'Rio de Janeiro',
	sigla: 'RJ',
	regiao: 'Sudeste',
	cidades: [
	{nome: 'Niteroi',
	area: 133.9,
	populacao: 487562
	}]})						 // insere nova instancia com nested docs
	
> db.estados.insertOne(
	{nome: 'São Paulo',
	sigla: 'SP',
	regiao: 'Sudeste',
	Cidades: [
		{
		nome: 'Campinas',
		area: 795.7,
		prefeito:
		'Jonas Donizette',
		populacao: 1081000
		},
		{
		nome: 'Guarulhos',
		populacao: 1325000
		},
		{
		nome: 'Sorocaba',
		distanciaCapital: 87,
		populacao: 644919
		}]
		})						 // insere nova instancia com multiples instancias em um nested docs
		
> db.estados.find(
	{nome: 'São Paulo'})		 // usa filtro para mostrar apenas os matches de {nome: 'Sao Paulo'}
	
> db.estados.find(
	{nome: 'São Paulo', Cidades:
	{ $elemMatch: 
	{ nome: 'Sorocaba'}}})		 // usa operador $elemMatch para achar um array com pelo menos uma ocorrencia,
								 // nesse caso vai retornar a query
								 // 	{
								 //		_id: ObjectId("642c591fe9e12c3b2804638d"),
								 //		  nome: 'São Paulo',
								 //		  sigla: 'SP',
								 //		  regiao: 'Sudeste',
								 //		  Cidades: [
								 //			{
								 //			  nome: 'Campinas',
								 //			  area: 795.7,
								 //			  prefeito: 'Jonas Donizette',
								 //			  populacao: 1081000
								 //			},
								 //			{
								 //			  nome: 'Guarulhos',
								 //			  populacao: 1325000
								 //			},
								 //			{
								 //			  nome: 'Sorocaba',
								 //			  distanciaCapital: 87,
								 //			  populacao: 644919
								 //			}
								 //		  ]
								 //		}
								 
> db.estados.find(
  {nome: 'São Paulo',
   Cidades:
   { $elemMatch:
   { nome: 'Sorocaba'}}},
   {Cidades:
   { $elemMatch:
   {nome: 'Sorocaba'}}}			 // usa multiplos filtros para achar apenas o registro com nome Sorocaba
								 // dentro do db.estados.nome = "Sao Paulo"
								 
> db.estados.updateOne(
  {nome: 'São Paulo', Cidades:
  { $elemMatch:
  { nome: 'Sorocaba'}}},
  { $set:
  { "Cidades.$._id": ObjectId()	 
  }})							 // usa metodo updateOne com filtros para selecionar apenas a ocorrencia
								 // de nome = 'Sorocaba' dentro de db.estados.nome = "Sao Paulo";